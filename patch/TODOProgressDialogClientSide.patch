--- a/csharp/ICT/Petra/Client/CommonDialogs/ProgressDialog.cs
+++ b/csharp/ICT/Petra/Client/CommonDialogs/ProgressDialog.cs
@@ -37,19 +37,21 @@ namespace Ict.Petra.Client.CommonDialogs
     {
         private bool FConfirmedClosing = false;
         private bool FShowCancellationConfirmationQuestion = false;
+        private bool FQueryServerForProgress = true;
 
         /// <summary>
         /// Constructor
         /// </summary>
         /// <param name="AWorkerThread">The Thread that performs the work that the progress dialog shows the progress of.</param>
         /// <param name="AShowCancellationConfirmationQuestion">In case the user requests a cancellation: should
+        /// <param name="AQueryServerForProgress">does this track a process on the server</param>
         /// a Yes/No MessageBox for the confirmation of the cancellation be shown, or not? NOTE: If that
         /// MessageBox should be shown then the consequence of doing this is that the Thread will still be continuing
         /// the work it is performing until the user chooses 'Yes', which can result in the work being finished
         /// before the user had a chance to read the message of the MessageBox and press 'Yes' - and that might
         /// well not be what the user wants!!! So, in general this Argument should be set to true only for
         /// Threads that are running a substantial amount of time. (Default=false).</param>
-        public TProgressDialog(Thread AWorkerThread, bool AShowCancellationConfirmationQuestion = false) : base()
+        public TProgressDialog(Thread AWorkerThread, bool AShowCancellationConfirmationQuestion = false, bool AQueryServerForProgress = true) : base()
         {
             //
             // Required for Windows Form Designer support
@@ -66,6 +68,9 @@ namespace Ict.Petra.Client.CommonDialogs
 
             TRemote.MCommon.WebConnectors.Reset();
             AWorkerThread.Start();
+
+            FQueryServerForProgress = AQueryServerForProgress;
+
             timer1.Start();
         }
 
@@ -101,7 +106,14 @@ namespace Ict.Petra.Client.CommonDialogs
 
             if (CancelConfirmationResult == DialogResult.Yes)
             {
-                TRemote.MCommon.WebConnectors.CancelJob();
+                if (FQueryServerForProgress)
+                {
+                    TRemote.MCommon.WebConnectors.CancelJob();
+                }
+                else
+                {
+                    FCancelled = true;
+                }
 
                 this.DialogResult = DialogResult.Cancel;
 
@@ -117,6 +129,65 @@ namespace Ict.Petra.Client.CommonDialogs
             }
         }
 
+        private string FMessage, FCaption;
+        private int FTotal, FCurrentProgress = 0;
+        private bool FFinished = false;
+        private bool FCancelled = false;
+
+        /// the message to be displayed
+        public string Message
+        {
+            set
+            {
+                FMessage = value;
+            }
+        }
+
+        /// the caption to be displayed
+        public string Caption
+        {
+            set
+            {
+                FCaption = value;
+            }
+        }
+
+        /// the total amount
+        public int Total
+        {
+            set
+            {
+                FTotal = value;
+            }
+        }
+
+        /// the current Progress
+        public int CurrentProgress
+        {
+            set
+            {
+                FCurrentProgress = value;
+            }
+        }
+
+        /// has the job finished successfully
+        public bool Finished
+        {
+            set
+            {
+                FFinished = value;
+            }
+        }
+
+        /// has the job been cancelled
+        public bool Cancelled
+        {
+            get
+            {
+                return FCancelled;
+            }
+        }
+
         private void Timer1Tick(object sender, EventArgs e)
         {
             string caption;
@@ -124,16 +195,32 @@ namespace Ict.Petra.Client.CommonDialogs
             int percentage;
             bool finished;
 
-            if (TRemote.MCommon.WebConnectors.GetCurrentState(out caption,
-                    out message,
-                    out percentage,
-                    out finished))
+            if (FQueryServerForProgress)
+            {
+                if (TRemote.MCommon.WebConnectors.GetCurrentState(out caption,
+                        out message,
+                        out percentage,
+                        out finished))
+                {
+                    this.Text = caption;
+                    this.lblMessage.Text = message;
+                    this.progressBar.Value = percentage;
+
+                    if (finished)
+                    {
+                        this.DialogResult = DialogResult.OK;
+                        FConfirmedClosing = true;
+                        Close();
+                    }
+                }
+            }
+            else
             {
-                this.Text = caption;
-                this.lblMessage.Text = message;
-                this.progressBar.Value = percentage;
+                this.Text = FCaption;
+                this.lblMessage.Text = FMessage;
+                this.progressBar.Value = Convert.ToInt32((100.0m * FCurrentProgress) / FTotal);
 
-                if (finished)
+                if (FFinished)
                 {
                     this.DialogResult = DialogResult.OK;
                     FConfirmedClosing = true;

